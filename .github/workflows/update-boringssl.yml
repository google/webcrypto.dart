name: Update BoringSSL

on:
  schedule:
    - cron: '0 9 * * 1'
  
  workflow_dispatch:
    inputs:
      boringssl_revision:
        description: 'Specific BoringSSL revision (SHA) to update to (leave empty for latest)'
        required: false
        type: string

jobs:
  update-boringssl:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Run BoringSSL update
        id: update
        run: |
          # Run the BoringSSL update script with dry-run first to get info
          if [ -n "${{ github.event.inputs.boringssl_revision }}" ]; then
            REVISION="${{ github.event.inputs.boringssl_revision }}"
            echo "Using specified revision: $REVISION"
          else
            REVISION=""
            echo "Using latest revision"
          fi
          
          # Run the update script
          bash ./tool/bump-boringssl-revision.sh $REVISION
          
          # Get the new revision from the updated file
          NEW_REVISION=$(cat tool/REVISION | tr -d ' \t\n\r')
          echo "new_revision=$NEW_REVISION" >> $GITHUB_OUTPUT

      - name: Get BoringSSL commit info
        id: boringssl-info
        run: |
          # Get commit information for the new revision
          TEMP_DIR=$(mktemp -d)
          git clone https://boringssl.googlesource.com/boringssl "$TEMP_DIR/boringssl"
          cd "$TEMP_DIR/boringssl"
          git checkout ${{ steps.update.outputs.new_revision }}
          
          COMMIT_DATE=$(git show -s --format=%ci ${{ steps.update.outputs.new_revision }})
          COMMIT_SUBJECT=$(git show -s --format=%s ${{ steps.update.outputs.new_revision }})
          COMMIT_AUTHOR=$(git show -s --format=%an ${{ steps.update.outputs.new_revision }})
          SHORT_SHA=$(echo "${{ steps.update.outputs.new_revision }}" | cut -c1-8)
          
          echo "commit_date=$COMMIT_DATE" >> $GITHUB_OUTPUT
          echo "commit_subject=$COMMIT_SUBJECT" >> $GITHUB_OUTPUT
          echo "commit_author=$COMMIT_AUTHOR" >> $GITHUB_OUTPUT
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT
          
          # Cleanup
          rm -rf "$TEMP_DIR"

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected after running update script"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected:"
            git diff --name-status
          fi

      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            chore: Update BoringSSL to ${{ steps.boringssl-info.outputs.short_sha }}
            
            Updates BoringSSL to revision ${{ steps.update.outputs.new_revision }}
            - Commit: ${{ steps.boringssl-info.outputs.commit_subject }}
            - Author: ${{ steps.boringssl-info.outputs.commit_author }}
            - Date: ${{ steps.boringssl-info.outputs.commit_date }}
          title: 'chore: Update BoringSSL to ${{ steps.boringssl-info.outputs.short_sha }}'
          body: |
            ## 🔄 Automated BoringSSL Update
            
            This PR updates BoringSSL to revision **${{ steps.boringssl-info.outputs.short_sha }}**.
            
            ### 📋 Update Summary
            - **Revision**: [${{ steps.boringssl-info.outputs.short_sha }}](https://boringssl.googlesource.com/boringssl/+/${{ steps.update.outputs.new_revision }})
            - **Commit**: ${{ steps.boringssl-info.outputs.commit_subject }}
            - **Author**: ${{ steps.boringssl-info.outputs.commit_author }}
            - **Date**: ${{ steps.boringssl-info.outputs.commit_date }}
            
            ### 🔧 What's Updated
            - ✅ **BoringSSL Sources**: Updated to latest revision
            - ✅ **CMake Configuration**: Regenerated `sources.cmake`
            - ✅ **FFI Bindings**: Updated Dart bindings for BoringSSL
            - ✅ **Symbols Table**: Regenerated symbol lookup table
            - ✅ **Darwin Sources**: Updated fake Darwin sources
            - ✅ **Tests**: All tests pass (verified during update)
            
            ### 🧪 Testing Status
            - [x] **Build Tests**: ✅ Passed
            - [x] **Unit Tests**: ✅ Passed  
            - [x] **Integration Tests**: ✅ Passed
            - [x] **Chrome Tests**: ✅ Passed
            - [x] **Firefox Tests**: ✅ Passed
            - [ ] **Manual Verification**: Pending review
            
            ### 📁 Files Changed
            - `tool/REVISION` - Updated to new revision
            - `third_party/boringssl/` - Updated source files
            - `darwin/third_party/boringssl/` - Updated Darwin sources
            - `lib/src/third_party/boringssl/generated_bindings.dart` - Updated FFI bindings
            - `src/symbols.generated.c` - Updated symbol table
            
            ---
            
            🤖 **Automated by**: Update BoringSSL workflow
            
            **Review Guidelines:**
            1. ✅ Verify all tests pass in CI
            2. 🔍 Review any breaking changes in BoringSSL changelog
            3. 🧪 Test critical cryptographic operations locally
            4. 🌐 Verify cross-platform compatibility (Windows, macOS, Linux)
            5. 📱 Test mobile platforms if applicable
            
            **Note**: This update was performed using the automated `bump-boringssl-revision.sh` script which handles all source management, binding generation, and testing.
          branch: update-boringssl-${{ steps.boringssl-info.outputs.short_sha }}
          branch-suffix: timestamp
          delete-branch: true
          labels: |
            dependencies
            automated-pr
            boringssl-update
            security

      - name: Summary
        run: |
          if [ "${{ steps.changes.outputs.has_changes }}" = "false" ]; then
            echo "ℹ️ No changes detected - BoringSSL is already up to date"
          else
            echo "🚀 Successfully created PR to update BoringSSL"
            echo "   Revision: ${{ steps.update.outputs.new_revision }}"
            echo "   Commit: ${{ steps.boringssl-info.outputs.commit_subject }}"
          fi
