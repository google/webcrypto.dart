name: Update BoringSSL

on:
  schedule:
    - cron: '0 9 * * 1'
  
  workflow_dispatch:
    inputs:
      boringssl_revision:
        description: 'Specific BoringSSL revision (SHA) to update to (leave empty for latest)'
        required: false
        type: string

jobs:
  update-boringssl:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Clone BoringSSL to get latest revision
        id: get-revision
        run: |
          # Clone BoringSSL to a temporary directory to get the latest revision
          TEMP_DIR=$(mktemp -d)
          git clone https://boringssl.googlesource.com/boringssl "$TEMP_DIR/boringssl"
          cd "$TEMP_DIR/boringssl"
          
          if [ -n "${{ github.event.inputs.boringssl_revision }}" ]; then
            LATEST_REVISION="${{ github.event.inputs.boringssl_revision }}"
            echo "Using manually specified revision: $LATEST_REVISION"
          else
            LATEST_REVISION=$(git rev-parse HEAD)
            echo "Latest BoringSSL revision: $LATEST_REVISION"
          fi
          
          # Get current revision from the Python script
          CURRENT_REVISION=$(grep "BORINGSSL_REVISION = " tool/update-boringssl.py | cut -d"'" -f2)
          echo "Current revision in script: $CURRENT_REVISION"
          
          echo "latest_revision=$LATEST_REVISION" >> $GITHUB_OUTPUT
          echo "current_revision=$CURRENT_REVISION" >> $GITHUB_OUTPUT
          
          # Check if update is needed
          if [ "$LATEST_REVISION" = "$CURRENT_REVISION" ]; then
            echo "needs_update=false" >> $GITHUB_OUTPUT
            echo "No update needed - already at latest revision"
          else
            echo "needs_update=true" >> $GITHUB_OUTPUT
            echo "Update needed: $CURRENT_REVISION -> $LATEST_REVISION"
          fi
          
          # Cleanup
          rm -rf "$TEMP_DIR"

      - name: Update BoringSSL revision in script
        if: steps.get-revision.outputs.needs_update == 'true'
        run: |
          # Update the BORINGSSL_REVISION in the Python script
          sed -i "s/BORINGSSL_REVISION = '[^']*'/BORINGSSL_REVISION = '${{ steps.get-revision.outputs.latest_revision }}'/" tool/update-boringssl.py
          
          # Verify the change
          echo "Updated revision in script:"
          grep "BORINGSSL_REVISION = " tool/update-boringssl.py

      - name: Run BoringSSL update script
        if: steps.get-revision.outputs.needs_update == 'true'
        run: |
          # Step 1: Clean up build artifacts
          echo "üßπ Cleaning up build artifacts..."
          bash ./tool/clean.sh
          
          # Step 2: Update BoringSSL sources
          echo "üì¶ Updating BoringSSL sources..."
          python3 tool/update-boringssl.py
          
          # Step 3: Get Dart dependencies
          echo "üì• Getting Dart dependencies..."
          dart pub get
          
          # Step 4: Generate symbols table
          echo "üî¢ Generating symbols table..."
          dart run ./tool/generate_symbols_table.dart
          
          # Step 5: Update FFI bindings
          echo "üîó Updating FFI bindings..."
          bash ./tool/update-bindings.sh

      - name: Get BoringSSL commit info
        if: steps.get-revision.outputs.needs_update == 'true'
        id: boringssl-info
        run: |
          # Clone BoringSSL again to get commit information
          TEMP_DIR=$(mktemp -d)
          git clone https://boringssl.googlesource.com/boringssl "$TEMP_DIR/boringssl"
          cd "$TEMP_DIR/boringssl"
          git checkout ${{ steps.get-revision.outputs.latest_revision }}
          
          COMMIT_DATE=$(git show -s --format=%ci ${{ steps.get-revision.outputs.latest_revision }})
          COMMIT_SUBJECT=$(git show -s --format=%s ${{ steps.get-revision.outputs.latest_revision }})
          COMMIT_AUTHOR=$(git show -s --format=%an ${{ steps.get-revision.outputs.latest_revision }})
          SHORT_SHA=$(echo "${{ steps.get-revision.outputs.latest_revision }}" | cut -c1-8)
          
          echo "commit_date=$COMMIT_DATE" >> $GITHUB_OUTPUT
          echo "commit_subject=$COMMIT_SUBJECT" >> $GITHUB_OUTPUT
          echo "commit_author=$COMMIT_AUTHOR" >> $GITHUB_OUTPUT
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT
          
          # Cleanup
          rm -rf "$TEMP_DIR"

      - name: Run tests
        if: steps.get-revision.outputs.needs_update == 'true'
        run: |
          echo "üß™ Running tests to verify update..."
          bash ./tool/test.sh

      - name: Check for changes
        if: steps.get-revision.outputs.needs_update == 'true'
        id: changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected after running update script"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected:"
            git diff --name-status
          fi

      - name: Create Pull Request
        if: steps.get-revision.outputs.needs_update == 'true' && steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            Update BoringSSL to ${{ steps.boringssl-info.outputs.short_sha }}
            
            - Updated from ${{ steps.get-revision.outputs.current_revision }} to ${{ steps.get-revision.outputs.latest_revision }}
            - Latest commit: ${{ steps.boringssl-info.outputs.commit_subject }}
            - Author: ${{ steps.boringssl-info.outputs.commit_author }}
            - Date: ${{ steps.boringssl-info.outputs.commit_date }}
          title: 'chore: Update BoringSSL to ${{ steps.boringssl-info.outputs.short_sha }}'
          body: |
            ## üîÑ Automated BoringSSL Update
            
            This PR updates BoringSSL to the latest revision.
            
            ### Changes
            - **From**: `${{ steps.get-revision.outputs.current_revision }}`
            - **To**: `${{ steps.get-revision.outputs.latest_revision }}`
            
            ### Latest Commit Details
            - **Subject**: ${{ steps.boringssl-info.outputs.commit_subject }}
            - **Author**: ${{ steps.boringssl-info.outputs.commit_author }}
            - **Date**: ${{ steps.boringssl-info.outputs.commit_date }}
            - **SHA**: [${{ steps.boringssl-info.outputs.short_sha }}](https://boringssl.googlesource.com/boringssl/+/${{ steps.get-revision.outputs.latest_revision }})
            
            ### What's Updated
            - Updated `tool/update-boringssl.py` with new revision
            - Refreshed BoringSSL source files and headers
            - Updated CMake configuration files
            - Regenerated symbols table and FFI bindings
            - **Tests passed** ‚úÖ (verified during update process)
            
            ### Testing Status
            - [x] Build tests pass
            - [x] Unit tests pass  
            - [x] Integration tests pass
            - [ ] Manual verification on target platforms
            
            ---
            
            ü§ñ This PR was created automatically by the Update BoringSSL workflow.
            
            **Review Guidelines:**
            1. Check that the build and tests pass
            2. Review any breaking changes in the BoringSSL changelog
            3. Test critical cryptographic operations
            4. Verify Windows compatibility (especially ECDH PKCS8 operations)
            
          branch: update-boringssl-${{ steps.boringssl-info.outputs.short_sha }}
          branch-suffix: timestamp
          delete-branch: true
          labels: |
            dependencies
            automated-pr
            boringssl-update

      - name: Summary
        run: |
          if [ "${{ steps.get-revision.outputs.needs_update }}" = "false" ]; then
            echo "‚úÖ No update needed - already at latest BoringSSL revision"
          elif [ "${{ steps.changes.outputs.has_changes }}" = "false" ]; then
            echo "‚ÑπÔ∏è Update script ran but no changes were detected"
          else
            echo "üöÄ Successfully created PR to update BoringSSL"
            echo "   From: ${{ steps.get-revision.outputs.current_revision }}"
            echo "   To: ${{ steps.get-revision.outputs.latest_revision }}"
          fi
